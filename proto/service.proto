syntax = "proto3";

package rdfc;

import "google/protobuf/empty.proto";

import "common.proto";
import "orchestrator.proto";
import "runner.proto";

// Message handling the status of a stream message
// Either, identifying the message, or indicating a chunk has been handled
message StreamControl {
  oneof inner {
    uint32 id = 1;
    uint32 processed = 2;
  }
}

message LogMessage {
  string level = 1;
  string msg = 2;
  repeated string entities = 3;
  repeated string aliases = 4;
}

service Runner {
  rpc connect(stream OrchestratorMessage) returns (stream RunnerMessage);
  rpc sendStreamMessage(stream StreamChunk) returns (stream StreamControl);
  rpc receiveStreamMessage(stream StreamControl) returns (stream DataChunk);
  rpc logStream(stream LogMessage) returns (google.protobuf.Empty);
}
